/**
 * 打包
 */

/**
 * 打包并混淆
 */
task releaseAndResGuard(group: 'release', description: 'release and resguard', dependsOn: ['clean', 'resguardRelease']) {

    doFirst {
        //do something
    }

    doLast {
        //do something
    }
}


if (project.hasProperty('command')) {
    /**
     * 命令行批量打补丁 项目根目录/tinker-patch.py
     */
    task initDir() {
        def baseDir = project.getProperties().get('multiApkDir')
        def newApkPath = project.getProperties().get('newApkPath')
        if (baseDir == null) return
        rootProject.ext.baseDir = baseDir
        rootProject.ext.newApk = newApkPath == null ? "" : newApkPath
        println "===>start baseDir:${baseDir} newApkPath:${newApkPath} "
    }
} else {
    //配置项
    def baseDir = ""
    def newApkPath = ""

    /**
     * 单独打补丁
     */
    task patchSingle(dependsOn: ['clean', 'buildTinkerPatchRelease']) {
        rootProject.ext.baseDir = baseDir
        rootProject.ext.newApk = newApkPath
        println "===>start baseDir:${baseDir} newApkPath:${newApkPath} "
    }

    /**
     * 生成多个补丁
     */
    task patchMulti(type: Exec) {
        workingDir "${projectDir}/"
        commandLine "python", "tinker-patch.py", "-d", "$baseDir", "-n", "$newApkPath"
    }
}